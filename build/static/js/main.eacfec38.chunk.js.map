{"version":3,"sources":["config/axiosConfig.js","store/reducers/artistSlice.js","store/reducers/@app/snackbarSlice.js","store/reducers/tweetSlice.js","store/reducers/albumSlice.js","store/reducers/@app/index.js","store/index.js","config/themeConfig.js","views/pages/Artists/index.js","views/pages/Albums/index.js","views/pages/Tweets/dialogs/TweetDialog.js","views/pages/Tweets/NewTweet.js","views/pages/Tweets/index.js","views/layouts/index.js","hoc/@app/Snackbar.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","headers","post","common","interceptors","response","use","error","Promise","resolve","reject","console","log","getArtistesAsync","createAsyncThunk","a","get","then","res","data","artisteSlice","createSlice","name","initialState","loading","artistes","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","snackbarSlice","open","message","openSnackbar","closeSnackbar","actions","addTweetAsync","thunkAPI","dispatch","getTweetsAsync","page","limit","updateTweetsAsync","put","id","tweetSlice","isSubmitting","tweets","dialog","removeTweet","filter","p","openDialog","closeDialog","unshift","rest","tweet","getAlbumsAsync","userId","getAlbumPhotosAsync","albumId","albumSlice","photoLoading","albums","photos","combineReducers","snackbar","store","configureStore","reducer","app","appSlice","artist","artistSlice","album","themeConfig","createTheme","palette","primary","light","main","dark","contrastText","secondary","ArtistesPage","useDispatch","navigate","useNavigate","useSelector","artistLoading","albumLoading","useEffect","className","CircularProgress","size","List","dense","map","ListItem","alignItems","ListItemAvatar","Avatar","ListItemText","email","phone","website","ListItemSecondaryAction","Button","edge","aria-label","onClick","IconButton","_","find","length","sx","backgroundColor","title","memo","AlbumsPage","params","useParams","ListItemButton","ImageList","width","height","cols","rowHeight","item","ImageListItem","src","url","srcSet","alt","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","m","position","right","top","color","theme","grey","TweetDialog","useState","body","form","setForm","handleChange","ev","target","value","handleClose","Dialog","aria-labelledby","fullWidth","maxWidth","DialogContent","dividers","Stack","spacing","FormControl","FormLabel","OutlinedInput","onChange","rows","multiline","DialogActions","autoFocus","variant","disabled","endIcon","defaultValues","NewTweet","useForm","control","handleSubmit","reset","errors","formState","noValidate","onSubmit","mb","rules","required","render","field","FormHelperText","type","TweetsPage","setPage","delete","Box","mt","Pagination","count","event","shape","useStyles","makeStyles","list","flexGrow","Layout","classes","React","selectedIndex","setSelectedIndex","handleListItemClick","index","path","replace","component","selected","ListItemIcon","Divider","Alert","forwardRef","ref","elevation","AppSnackbar","Snackbar","autoHideDuration","severity","App","ThemeProvider","element","Artists","Albums","Tweets","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eacfec38.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"https://jsonplaceholder.typicode.com/\";\n\naxios.defaults.baseURL = baseUrl;\naxios.defaults.headers.post[\"Content-Type\"] =\n  \"application/x-www-form-urlencoded\";\naxios.defaults.headers.common[\"X-Frame-Options\"] = \"sameorigin\";\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    return new Promise((resolve, reject) => {\n      console.log(error);\n      reject(error);\n    });\n  }\n);\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getArtistesAsync = createAsyncThunk(\"artistes/all\", async () => {\n  return await axios.get(\"users\").then((res) => {\n    return res.data;\n  });\n});\n\nconst artisteSlice = createSlice({\n  name: \"artistes\",\n  initialState: {\n    loading: false,\n    artistes: [],\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getArtistesAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(getArtistesAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.artistes = action.payload;\n    });\n    builder.addCase(getArtistesAsync.rejected, (state, action) => {\n      state.loading = false;\n    });\n  },\n});\n\nexport default artisteSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst snackbarSlice = createSlice({\n  name: \"snackbar\",\n  initialState: {\n    data: { open: false, message: \"\" },\n  },\n  reducers: {\n    openSnackbar: (state, action) => {\n      state.data.open = true;\n      state.data.message = action.payload.message;\n    },\n    closeSnackbar: (state, action) => {\n      state.data.open = false;\n      state.data.message = \"\";\n    },\n  },\n});\n\nexport const { openSnackbar, closeSnackbar } = snackbarSlice.actions;\n\nexport default snackbarSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { openSnackbar } from \"@/store/reducers/@app/snackbarSlice\";\n\nexport const addTweetAsync = createAsyncThunk(\n  \"tweets/create\",\n  async (data, thunkAPI) => {\n    return await axios.post(\"comments\", data).then((res) => {\n      thunkAPI.dispatch(openSnackbar({ message: \"Tweet saved successfully\" }));\n      return res.data;\n    });\n  }\n);\n\nexport const getTweetsAsync = createAsyncThunk(\n  \"tweets/all\",\n  async (page, limit = 10) => {\n    return await axios\n      .get(`comments?_page=${page}&_limit=${limit}`)\n      .then((res) => {\n        return res.data;\n      });\n  }\n);\n\nexport const updateTweetsAsync = createAsyncThunk(\n  \"tweets/update\",\n  async (data, thunkAPI) => {\n    return await axios.put(`comments/${data.id}`, data).then((res) => {\n      thunkAPI.dispatch(\n        openSnackbar({ message: \"Tweet updated successfully\" })\n      );\n      return res.data;\n    });\n  }\n);\n\nconst tweetSlice = createSlice({\n  name: \"tweets\",\n  initialState: {\n    loading: false,\n    isSubmitting: false,\n    tweets: [],\n    dialog: {\n      open: false,\n      data: null,\n    },\n  },\n  reducers: {\n    removeTweet: (state, action) => {\n      state.tweets = state.tweets.filter((p) => p.id !== action.payload);\n    },\n    openDialog: (state, action) => {\n      state.dialog.open = true;\n      state.dialog.data = action.payload;\n    },\n    closeDialog: (state, action) => {\n      state.dialog.open = false;\n      state.dialog.data = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getTweetsAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(getTweetsAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tweets = action.payload;\n    });\n\n    // add a new tweet\n    builder.addCase(addTweetAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(addTweetAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tweets.unshift(action.payload);\n    });\n\n    // update a tweet\n    builder.addCase(updateTweetsAsync.pending, (state, action) => {\n      state.isSubmitting = true;\n    });\n    builder.addCase(updateTweetsAsync.fulfilled, (state, action) => {\n      const rest = state.tweets.filter(\n        (tweet) => tweet.id !== action.payload.id\n      );\n      state.isSubmitting = false;\n      state.tweets = [action.payload, ...rest];\n    });\n  },\n});\n\nexport const { removeTweet, openDialog, closeDialog } = tweetSlice.actions;\n\nexport const deleteTweetAsync = (id) => async (dispatch) => {\n  await axios.delete(`comments/${id}`).then((res) => {\n    dispatch(removeTweet(id));\n  });\n};\n\nexport default tweetSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getAlbumsAsync = createAsyncThunk(\"albums/all\", async (userId) => {\n  return await axios.get(`albums?userId=${userId}`).then((res) => {\n    return res.data;\n  });\n});\n\nexport const getAlbumPhotosAsync = createAsyncThunk(\n  \"albums/photos\",\n  async (albumId) => {\n    return await axios.get(`albums/${albumId}/photos`).then((res) => {\n      return res.data;\n    });\n  }\n);\n\nconst albumSlice = createSlice({\n  name: \"albums\",\n  initialState: {\n    loading: false,\n    photoLoading: false,\n    albums: [],\n    photos: [],\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlbumsAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(getAlbumsAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.albums = action.payload;\n    });\n    builder.addCase(getAlbumsAsync.rejected, (state, action) => {\n      state.loading = false;\n    });\n    // get album photos\n    builder.addCase(getAlbumPhotosAsync.pending, (state, action) => {\n      state.photoLoading = true;\n    });\n    builder.addCase(getAlbumPhotosAsync.fulfilled, (state, action) => {\n      state.photoLoading = false;\n      state.photos = action.payload;\n    });\n    builder.addCase(getAlbumPhotosAsync.rejected, (state, action) => {\n      state.photoLoading = false;\n    });\n  },\n});\n\nexport default albumSlice.reducer;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport snackbarSlice from \"./snackbarSlice\";\n\nexport default combineReducers({\n  snackbar: snackbarSlice,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport artistSlice from \"./reducers/artistSlice\";\nimport tweetSlice from \"./reducers/tweetSlice\";\nimport albumSlice from \"./reducers/albumSlice\";\n\nimport appSlice from \"./reducers/@app\";\n\nconst store = configureStore({\n  reducer: {\n    app: appSlice,\n    artist: artistSlice,\n    tweet: tweetSlice,\n    album: albumSlice,\n  },\n});\n\nexport default store;\n","import { createTheme } from \"@mui/material/styles\";\n\nconst themeConfig = createTheme({\n  palette: {\n    primary: {\n      light: \"#77a258\",\n      main: \"#558b2f\",\n      dark: \"#3b6120\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#f44336\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n  },\n});\n\nexport default themeConfig;\n","import React, { useEffect, memo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getArtistesAsync } from \"@/store/reducers/artistSlice\";\nimport { getAlbumsAsync } from \"@/store/reducers/albumSlice\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@mui/material/ListItemSecondaryAction\";\nimport { HiOutlineEye } from \"react-icons/hi\";\nimport { FaRegUser } from \"react-icons/fa\";\nimport { RiDiscLine } from \"react-icons/ri\";\nimport { CircularProgress } from \"@mui/material\";\nimport _ from \"lodash\";\n\nconst ArtistesPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { artistes, loading: artistLoading } = useSelector(\n    ({ artist }) => artist\n  );\n  const { albums, loading: albumLoading } = useSelector(({ album }) => album);\n\n  useEffect(() => {\n    dispatch(getArtistesAsync());\n  }, [dispatch]);\n\n  return (\n    <div className=\"md:max-w-6xl w-full md:mr-auto p-8\">\n      <h2 className=\"text-4xl font-bold pb-8\">Chocolate city artistes</h2>\n\n      <div className=\"grid grid-cols-12 md:gap-x-16 gap-y-16\">\n        <div className=\"col-span-12 md:col-span-7\">\n          <h2 className=\"text-2xl font-medium text-gray-800 pb-6\">\n            Artistes list\n          </h2>\n\n          {artistLoading ? (\n            <CircularProgress size={16} />\n          ) : (\n            <List dense className=\"border-l-4 border-gray-400\">\n              {artistes.map((a) => (\n                <ListItem key={a.id} alignItems=\"flex-start\">\n                  <ListItemAvatar>\n                    <Avatar>\n                      <FaRegUser />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={`${a.name} — ${a.email}`}\n                    secondary={\n                      <>\n                        <span>\n                          {a.phone} — {a.website}\n                        </span>\n                        <br />\n                        <span>{a.website}</span>\n                      </>\n                    }\n                  />\n                  <ListItemSecondaryAction className=\"space-x-2\">\n                    <Button\n                      edge=\"start\"\n                      size=\"small\"\n                      aria-label=\"delete\"\n                      onClick={() => dispatch(getAlbumsAsync(a.id))}\n                    >\n                      view album\n                    </Button>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"view\"\n                      onClick={() => navigate(`/artistes/${a.id}/albums`)}\n                    >\n                      <HiOutlineEye size={20} />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </div>\n\n        <div className=\"col-span-12 md:col-span-5\">\n          <h2 className=\"text-2xl font-medium text-gray-800 pb-6\">\n            {_.find(artistes, { id: albums?.[0]?.userId })?.name} Artiste's\n            Album\n          </h2>\n\n          {albumLoading ? (\n            <CircularProgress size={16} />\n          ) : albums.length ? (\n            <List dense className=\"border-l-4 border-green-600\">\n              {albums.map((a) => (\n                <ListItem key={a.id}>\n                  <ListItemAvatar>\n                    <Avatar sx={{ backgroundColor: \"primary.main\" }}>\n                      <RiDiscLine />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={`${a.title}`}\n                    secondary={\n                      <span>\n                        owned by {_.find(artistes, { id: a.userId })?.name}\n                      </span>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ArtistesPage);\n","import React, { useEffect, memo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getArtistesAsync } from \"@/store/reducers/artistSlice\";\nimport {\n  getAlbumsAsync,\n  getAlbumPhotosAsync,\n} from \"@/store/reducers/albumSlice\";\nimport Avatar from \"@mui/material/Avatar\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ImageList from \"@mui/material/ImageList\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport { RiDiscLine } from \"react-icons/ri\";\nimport { CircularProgress } from \"@mui/material\";\nimport _ from \"lodash\";\n\nconst AlbumsPage = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const { artistes } = useSelector(({ artist }) => artist);\n  const { albums, photos, loading, photoLoading } = useSelector(\n    ({ album }) => album\n  );\n\n  useEffect(() => {\n    dispatch(getArtistesAsync());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getAlbumsAsync(params.userId));\n  }, [dispatch, params]);\n\n  console.log(\"albums mounted\");\n\n  return (\n    <div className=\"md:max-w-6xl w-full mr-auto p-8\">\n      <h2 className=\"text-4xl font-bold pb-8\">Chocolate city artistes</h2>\n\n      <div className=\"grid grid-cols-12 md:gap-x-16 gap-y-16\">\n        <div className=\"col-span-12 md:col-span-7\">\n          <h2 className=\"text-2xl font-medium text-gray-800 pb-6\">\n            Albums list\n          </h2>\n\n          {loading ? (\n            <CircularProgress size={16} />\n          ) : (\n            <List dense className=\"border-l-4 border-gray-400\">\n              {albums.map((a) => (\n                <ListItem\n                  key={a.id}\n                  onClick={() => dispatch(getAlbumPhotosAsync(a.id))}\n                >\n                  <ListItemButton>\n                    <ListItemAvatar>\n                      <Avatar sx={{ backgroundColor: \"primary.main\" }}>\n                        <RiDiscLine />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={a.title}\n                      secondary={\n                        <span>\n                          owned by {_.find(artistes, { id: a.userId })?.name}\n                        </span>\n                      }\n                    />\n                  </ListItemButton>\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </div>\n\n        <div className=\"col-span-12 md:col-span-5\">\n          <h2 className=\"text-2xl font-medium text-gray-800 pb-6\">\n            Album's Photos\n          </h2>\n\n          {photoLoading ? (\n            <CircularProgress size={16} />\n          ) : (\n            <ImageList\n              sx={{ width: 500, height: 450 }}\n              cols={3}\n              rowHeight={164}\n            >\n              {photos.map((item) => (\n                <ImageListItem key={item.url}>\n                  <img\n                    src={`${item.url}?w=164&h=164&fit=crop&auto=format`}\n                    srcSet={`${item.url}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\n                    alt={item.title}\n                    loading=\"lazy\"\n                  />\n                </ImageListItem>\n              ))}\n            </ImageList>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(AlbumsPage);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateTweetsAsync } from \"@/store/reducers/tweetSlice\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport Stack from \"@mui/material/Stack\";\nimport { MdClose } from \"react-icons/md\";\n\nimport { closeDialog } from \"@/store/reducers/tweetSlice\";\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <MdClose />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function TweetDialog() {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({ id: null, name: \"\", body: \"\" });\n  const { open, data } = useSelector(({ tweet }) => tweet.dialog);\n  const isSubmitting = useSelector(({ tweet }) => tweet.isSubmitting);\n\n  useEffect(() => {\n    if (data) {\n      setForm((state) => ({\n        ...state,\n        id: data.id,\n        name: data.name,\n        body: data.body,\n      }));\n    }\n  }, [data]);\n\n  const canSubmit = () => {\n    return form.name && form.body;\n  };\n\n  const handleChange = (ev) => {\n    setForm({ ...form, [ev.target.name]: ev.target.value });\n  };\n\n  const handleClose = () => {\n    dispatch(closeDialog());\n  };\n\n  const handleSave = () => {\n    dispatch(updateTweetsAsync(form));\n    handleClose();\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n      fullWidth\n      maxWidth=\"xs\"\n    >\n      <BootstrapDialogTitle id=\"dialog-title\" onClose={handleClose}>\n        Update tweet\n      </BootstrapDialogTitle>\n      <DialogContent dividers>\n        <Stack spacing={2}>\n          <FormControl fullWidth>\n            <FormLabel>Name</FormLabel>\n            <OutlinedInput\n              name=\"name\"\n              value={form.name}\n              onChange={handleChange}\n            />\n          </FormControl>\n\n          <FormControl fullWidth>\n            <FormLabel>Body</FormLabel>\n            <OutlinedInput\n              name=\"body\"\n              value={form.body}\n              onChange={handleChange}\n              rows={3}\n              multiline\n            />\n          </FormControl>\n        </Stack>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          autoFocus\n          variant=\"outlined\"\n          onClick={handleSave}\n          disabled={!canSubmit()}\n          endIcon={isSubmitting && <CircularProgress size={16} />}\n        >\n          Save changes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTweetAsync } from \"@/store/reducers/tweetSlice\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport Stack from \"@mui/material/Stack\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nconst defaultValues = {\n  name: \"\",\n  body: \"\",\n};\n\nfunction NewTweet() {\n  const dispatch = useDispatch();\n  const isSubmitting = useSelector(({ tweet }) => tweet.isSubmitting);\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ defaultValues });\n\n  const onSubmit = (data) => {\n    dispatch(addTweetAsync(data));\n    reset(null);\n  };\n\n  return (\n    <div className=\"w-full\">\n      <form noValidate onSubmit={handleSubmit(onSubmit)}>\n        <Stack spacing={2} mb={4}>\n          <FormControl fullWidth>\n            <FormLabel>Name</FormLabel>\n            <Controller\n              name=\"name\"\n              rules={{ required: \"Name is required\" }}\n              control={control}\n              render={({ field }) => <OutlinedInput {...field} />}\n            />\n            <FormHelperText>\n              <span className=\"text-red-900\">\n                {errors.name && errors.name.message}\n              </span>\n            </FormHelperText>\n          </FormControl>\n\n          <FormControl fullWidth>\n            <FormLabel>Body</FormLabel>\n            <Controller\n              name=\"body\"\n              rules={{ required: \"Body is required\" }}\n              control={control}\n              render={({ field }) => (\n                <OutlinedInput {...field} multiline rows={3} />\n              )}\n            />\n            <FormHelperText>\n              <span className=\"text-red-900\">\n                {errors.body && errors.body.message}\n              </span>\n            </FormHelperText>\n          </FormControl>\n        </Stack>\n\n        <Button\n          type=\"submit\"\n          autoFocus\n          variant=\"outlined\"\n          endIcon={isSubmitting && <CircularProgress size={16} />}\n        >\n          Save tweet\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default NewTweet;\n","import React, { useState, useEffect, memo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getTweetsAsync,\n  deleteTweetAsync,\n  openDialog,\n} from \"@/store/reducers/tweetSlice\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { HiOutlinePencil, HiOutlineTrash } from \"react-icons/hi\";\nimport { FaRegUser } from \"react-icons/fa\";\nimport { CircularProgress } from \"@mui/material\";\nimport TweetDialog from \"./dialogs/TweetDialog\";\nimport NewTweet from \"./NewTweet\";\n\nconst TweetsPage = () => {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const { tweets, loading } = useSelector(({ tweet }) => tweet);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    dispatch(getTweetsAsync(page));\n  }, [dispatch, page]);\n\n  return (\n    <div className=\"md:max-w-6xl w-full mr-auto p-8\">\n      <h2 className=\"text-4xl font-bold pb-8\">Tweets</h2>\n\n      <div className=\"grid grid-cols-12 md:gap-x-16 gap-y-16\">\n        <div className=\"col-span-12 md:col-span-7\">\n          <h2 className=\"text-2xl font-medium text-gray-800 pb-6\">\n            Your tweets\n          </h2>\n\n          {loading ? (\n            <CircularProgress size={16} />\n          ) : (\n            <List dense className=\"border-l-4 border-gray-400\">\n              {tweets.map((a) => (\n                <ListItem key={a.id} alignItems=\"flex-start\">\n                  <ListItemAvatar>\n                    <Avatar sx={{ backgroundColor: \"primary.main\" }}>\n                      <FaRegUser size=\"24\" />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={a.name}\n                    secondary={\n                      <>\n                        <span>{a.body}</span>\n                        <span className=\"block space-x-6\">\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"edit\"\n                            onClick={() => dispatch(openDialog(a))}\n                          >\n                            <HiOutlinePencil size={16} />\n                          </IconButton>\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"delete\"\n                            onClick={() => dispatch(deleteTweetAsync(a.id))}\n                          >\n                            <HiOutlineTrash size={16} />\n                          </IconButton>\n                        </span>\n                      </>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          )}\n          <Box mt={4}>\n            <Pagination\n              count={10}\n              page={page}\n              onChange={handlePageChange}\n              variant=\"outlined\"\n              shape=\"rounded\"\n            />\n          </Box>\n        </div>\n\n        <div className=\"col-span-12 md:col-span-5\">\n          <h2 className=\"text-2xl font-medium text-gray-800 pb-6\">\n            Create a new <span className=\"text-gray-500\">tweet</span>\n          </h2>\n\n          <NewTweet />\n        </div>\n      </div>\n\n      <TweetDialog />\n    </div>\n  );\n};\n\nexport default memo(TweetsPage);\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Divider from \"@mui/material/Divider\";\nimport { HiOutlineInboxIn, HiOutlineMailOpen } from \"react-icons/hi\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Layout({ children }) {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleListItemClick = (event, index, path) => {\n    setSelectedIndex(index);\n    navigate(path, { replace: true });\n  };\n\n  return (\n    <div className=\"w-full block md:flex\">\n      <div className=\"md:min-h-screen md:w-64 md:max-w-lg w-full bg-gray-700\">\n        <Box sx={{ width: \"100%\", maxWidth: \"100%\", color: \"#ccc\" }}>\n          <List component=\"nav\" aria-label=\"main nav\" className={classes.list}>\n            <ListItemButton\n              selected={selectedIndex === 0}\n              onClick={(event) => handleListItemClick(event, 0, \"artistes\")}\n            >\n              <ListItemIcon>\n                <HiOutlineInboxIn color=\"#ccc\" />\n              </ListItemIcon>\n              <ListItemText primary=\"Artistes\" />\n            </ListItemButton>\n            <ListItemButton\n              selected={selectedIndex === 1}\n              onClick={(event) => handleListItemClick(event, 1, \"tweets\")}\n            >\n              <ListItemIcon>\n                <HiOutlineMailOpen color=\"#ccc\" />\n              </ListItemIcon>\n              <ListItemText primary=\"Tweets\" />\n            </ListItemButton>\n          </List>\n          <Divider />\n        </Box>\n      </div>\n      <div className=\"flex-1 w-full border\">{children}</div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { closeSnackbar } from \"@/store/reducers/@app/snackbarSlice\";\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction AppSnackbar() {\n  const dispatch = useDispatch();\n  const { open, message } = useSelector(({ app }) => app.snackbar.data);\n\n  return (\n    <div>\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={() => dispatch(closeSnackbar())}\n      >\n        <Alert\n          onClose={() => dispatch(closeSnackbar())}\n          severity=\"success\"\n          sx={{ width: \"100%\" }}\n        >\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default AppSnackbar;\n","import \"@/config/axiosConfig\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport store from \"./store\";\nimport themeConfig from \"./config/themeConfig\";\n\nimport Artists from \"./views/pages/Artists\";\nimport Albums from \"./views/pages/Albums\";\nimport Tweets from \"./views/pages/Tweets\";\n// import ErrorBoundary from \"./hoc/ErrorBoundary\";\nimport Layout from \"@/views/layouts\";\n\nimport Snackbar from \"@/hoc/@app/Snackbar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <ThemeProvider theme={themeConfig}>\n          {/* <ErrorBoundary> */}\n          <Snackbar />\n          <BrowserRouter>\n            <Layout>\n              <Routes>\n                <Route path=\"/\" element={<Artists />} />\n                <Route path=\"artistes\">\n                  <Route index element={<Artists />} />\n                  <Route path=\":userId/albums\" element={<Albums />} />\n                </Route>\n                <Route path=\"tweets\" element={<Tweets />}>\n                  <Route path=\":tweetId\" element={<Albums />} />\n                </Route>\n              </Routes>\n            </Layout>\n          </BrowserRouter>\n          {/* </ErrorBoundary> */}\n        </ThemeProvider>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}