{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst languageSlice = createSlice({\n  name: \"language\",\n  initialState: {\n    languages: []\n  },\n  reducers: {\n    getLanguages: (state, action) => {\n      state.languages = action.payload;\n    }\n  }\n});\nexport const {\n  getLanguages\n} = languageSlice.actions;\nexport const getLanguagesAsync = data => dispatch => {\n  axios.get(\"http://localhost:4000/languages\", data).then(res => {\n    dispatch(getLanguages(res.data));\n  });\n};\nexport default languageSlice.reducer;","map":{"version":3,"sources":["/Users/admin/Documents/projects/ccartists-app/src/store/reducers/languageSlice.js"],"names":["createSlice","axios","languageSlice","name","initialState","languages","reducers","getLanguages","state","action","payload","actions","getLanguagesAsync","data","dispatch","get","then","res","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAGF,WAAW,CAAC;AAChCG,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AADC,GAFkB;AAKhCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACH,SAAN,GAAkBI,MAAM,CAACC,OAAzB;AACD;AAHO;AALsB,CAAD,CAAjC;AAYA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAmBL,aAAa,CAACS,OAAvC;AAEP,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAWC,QAAD,IAAc;AACvDb,EAAAA,KAAK,CAACc,GAAN,CAAU,iCAAV,EAA6CF,IAA7C,EAAmDG,IAAnD,CAAyDC,GAAD,IAAS;AAC/DH,IAAAA,QAAQ,CAACP,YAAY,CAACU,GAAG,CAACJ,IAAL,CAAb,CAAR;AACD,GAFD;AAGD,CAJM;AAMP,eAAeX,aAAa,CAACgB,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst languageSlice = createSlice({\n  name: \"language\",\n  initialState: {\n    languages: [],\n  },\n  reducers: {\n    getLanguages: (state, action) => {\n      state.languages = action.payload;\n    },\n  },\n});\n\nexport const { getLanguages } = languageSlice.actions;\n\nexport const getLanguagesAsync = (data) => (dispatch) => {\n  axios.get(\"http://localhost:4000/languages\", data).then((res) => {\n    dispatch(getLanguages(res.data));\n  });\n};\n\nexport default languageSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}