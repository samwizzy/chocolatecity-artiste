{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/projects/ccartists-app/src/views/auth/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@mui/material/Button\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport IconButton from \"@mui/material/IconButton\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport Radio from \"@mui/material/Radio\";\nimport Stack from \"@mui/material/Stack\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\nimport { signUpAsync } from \"@/store/reducers/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  firstName: \"\",\n  lastName: \"\",\n  emailAddress: \"\",\n  password: \"\",\n  gender: \"\"\n};\n\nfunction SignUp() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [visibility, setVisibility] = useState(false);\n  const {\n    user,\n    loading\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues\n  });\n\n  const handleClickShowPassword = () => {\n    setVisibility(!visibility);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const resetForm = () => {\n    reset(null, {\n      keepValues: false\n    });\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n    dispatch(signUpAsync(data));\n    resetForm();\n  };\n\n  console.log(user, \"user\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 border rounded-md shadow-sm md:w-4/12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-8\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                rules: {\n                  required: true\n                },\n                render: ({\n                  field\n                }) => /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 42\n                }, this),\n                name: \"firstName\",\n                control: control\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: errors.firstName && \"First name is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                children: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                rules: {\n                  required: true\n                },\n                render: ({\n                  field\n                }) => /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 42\n                }, this),\n                name: \"lastName\",\n                control: control\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: errors.lastName && \"Last name is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              rules: {\n                required: true\n              },\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 40\n              }, this),\n              name: \"emailAddress\",\n              control: control\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.emailAddress && \"Email address is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              rules: {\n                required: true\n              },\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field,\n                type: visibility ? \"text\" : \"password\",\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: handleClickShowPassword,\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: visibility ? /*#__PURE__*/_jsxDEV(MdVisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 41\n                    }, this) : /*#__PURE__*/_jsxDEV(MdVisibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this),\n              name: \"password\",\n              control: control\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.password && \"Password is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              rules: {\n                required: true\n              },\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(RadioGroup, { ...field,\n                row: true,\n                \"aria-label\": \"gender\",\n                name: \"gender\",\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"MALE\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 32\n                  }, this),\n                  label: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"FEMALE\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 32\n                  }, this),\n                  label: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this),\n              name: \"gender\",\n              control: control\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.gender && \"Gender is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            startIcon: loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 37\n            }, this),\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"wFZM93aznBkdHvpAyXm0cAqPQUk=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/admin/Documents/projects/ccartists-app/src/views/auth/SignUp.js"],"names":["React","useState","useForm","Controller","useDispatch","useSelector","Button","OutlinedInput","FormControl","FormControlLabel","FormHelperText","CircularProgress","IconButton","RadioGroup","Radio","Stack","InputAdornment","FormLabel","MdVisibility","MdVisibilityOff","signUpAsync","defaultValues","firstName","lastName","emailAddress","password","gender","SignUp","dispatch","visibility","setVisibility","user","loading","auth","control","handleSubmit","reset","formState","errors","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","resetForm","keepValues","onSubmit","data","console","log","required","field"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@mui/material/Button\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport IconButton from \"@mui/material/IconButton\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport Radio from \"@mui/material/Radio\";\nimport Stack from \"@mui/material/Stack\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\nimport { signUpAsync } from \"@/store/reducers/authSlice\";\n\nconst defaultValues = {\n  firstName: \"\",\n  lastName: \"\",\n  emailAddress: \"\",\n  password: \"\",\n  gender: \"\",\n};\n\nfunction SignUp() {\n  const dispatch = useDispatch();\n  const [visibility, setVisibility] = useState(false);\n  const { user, loading } = useSelector(({ auth }) => auth);\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ defaultValues });\n\n  const handleClickShowPassword = () => {\n    setVisibility(!visibility);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const resetForm = () => {\n    reset(null, { keepValues: false });\n  };\n\n  const onSubmit = (data) => {\n    console.log(data);\n    dispatch(signUpAsync(data));\n    resetForm();\n  };\n\n  console.log(user, \"user\");\n\n  return (\n    <div className=\"h-screen flex items-center justify-center\">\n      <div className=\"p-8 border rounded-md shadow-sm md:w-4/12\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-8\">Sign Up</h2>\n\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Stack spacing={1}>\n            <Stack direction=\"row\" spacing={1}>\n              <FormControl variant=\"outlined\" fullWidth>\n                <FormLabel component=\"legend\">First name</FormLabel>\n                <Controller\n                  rules={{ required: true }}\n                  render={({ field }) => <OutlinedInput {...field} />}\n                  name=\"firstName\"\n                  control={control}\n                />\n                <FormHelperText>\n                  {errors.firstName && \"First name is required\"}\n                </FormHelperText>\n              </FormControl>\n\n              <FormControl variant=\"outlined\" fullWidth>\n                <FormLabel component=\"legend\">Last name</FormLabel>\n                <Controller\n                  rules={{ required: true }}\n                  render={({ field }) => <OutlinedInput {...field} />}\n                  name=\"lastName\"\n                  control={control}\n                />\n                <FormHelperText>\n                  {errors.lastName && \"Last name is required\"}\n                </FormHelperText>\n              </FormControl>\n            </Stack>\n\n            <FormControl variant=\"outlined\" fullWidth>\n              <FormLabel component=\"legend\">Email Address</FormLabel>\n              <Controller\n                rules={{ required: true }}\n                render={({ field }) => <OutlinedInput {...field} />}\n                name=\"emailAddress\"\n                control={control}\n              />\n              <FormHelperText>\n                {errors.emailAddress && \"Email address is required\"}\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" fullWidth>\n              <FormLabel component=\"legend\">Password</FormLabel>\n              <Controller\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <OutlinedInput\n                    {...field}\n                    type={visibility ? \"text\" : \"password\"}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowPassword}\n                          onMouseDown={handleMouseDownPassword}\n                          edge=\"end\"\n                        >\n                          {visibility ? <MdVisibilityOff /> : <MdVisibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                )}\n                name=\"password\"\n                control={control}\n              />\n              <FormHelperText>\n                {errors.password && \"Password is required\"}\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" fullWidth>\n              <FormLabel component=\"legend\">Gender</FormLabel>\n              <Controller\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <RadioGroup {...field} row aria-label=\"gender\" name=\"gender\">\n                    <FormControlLabel\n                      value=\"MALE\"\n                      control={<Radio />}\n                      label=\"Male\"\n                    />\n                    <FormControlLabel\n                      value=\"FEMALE\"\n                      control={<Radio />}\n                      label=\"Female\"\n                    />\n                  </RadioGroup>\n                )}\n                name=\"gender\"\n                control={control}\n              />\n              <FormHelperText>\n                {errors.gender && \"Gender is required\"}\n              </FormHelperText>\n            </FormControl>\n          </Stack>\n\n          <div className=\"mt-8\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              startIcon={loading && <CircularProgress size={16} />}\n            >\n              Sign up\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}