{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/projects/ccartists-app/src/views/pages/Artists/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getArtistesAsync } from \"@/store/reducers/artistSlice\";\nimport { getAlbumsAsync } from \"@/store/reducers/albumSlice\";\nimport { makeStyles } from \"@mui/styles\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@mui/material/ListItemSecondaryAction\";\nimport { HiUserCircle, HiOutlineExternalLink } from \"react-icons/hi\";\nimport { RiDiscLine } from \"react-icons/ri\";\nimport { CircularProgress } from \"@mui/material\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    \"&.MuiAvatar-root\": {\n      backgroundColor: theme.palette.primary.main\n    }\n  }\n}));\n\nconst ArtistesPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const {\n    artistes,\n    loading: artistLoading\n  } = useSelector(({\n    artist\n  }) => artist);\n  const {\n    albums,\n    loading: albumLoading\n  } = useSelector(({\n    album\n  }) => album);\n  useEffect(() => {\n    dispatch(getArtistesAsync());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mr-auto p-8 border\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold pb-8\",\n      children: \"Chocolate city artistes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-12 gap-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-12 md:col-span-7\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-medium text-gray-800 pb-6\",\n          children: \"Artistes list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), artistLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          className: \"border-l-4 border-gray-400\",\n          children: artistes.map(a => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: /*#__PURE__*/_jsxDEV(HiUserCircle, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${a.name} â€” ${a.email}`,\n                secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [a.phone, \" \\u2014 \", a.website]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: a.website\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  edge: \"start\",\n                  size: \"small\",\n                  \"aria-label\": \"delete\",\n                  onClick: () => dispatch(getAlbumsAsync(a.id)),\n                  children: \"view album\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"view\",\n                  onClick: () => navigate(`/artistes/${a.id}/albums`),\n                  children: /*#__PURE__*/_jsxDEV(HiOutlineExternalLink, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, a.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-12 md:col-span-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-medium text-gray-800 pb-6\",\n          children: \"Artiste's Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), albumLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          className: \"border-l-4 border-green-200\",\n          children: albums.map(a => {\n            var _$find;\n\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.avatar,\n                  children: /*#__PURE__*/_jsxDEV(RiDiscLine, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${a.title}`,\n                secondary: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"owned by \", (_$find = _.find(artistes, {\n                    id: a.userId\n                  })) === null || _$find === void 0 ? void 0 : _$find.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, a.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ArtistesPage, \"ZLlhVikcdsvggC8sWBlZZMgIFBU=\", false, function () {\n  return [useDispatch, useNavigate, useStyles, useSelector, useSelector];\n});\n\n_c = ArtistesPage;\nexport default ArtistesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistesPage\");","map":{"version":3,"sources":["/Users/admin/Documents/projects/ccartists-app/src/views/pages/Artists/index.js"],"names":["React","useEffect","useNavigate","useSelector","useDispatch","getArtistesAsync","getAlbumsAsync","makeStyles","Avatar","IconButton","Button","List","ListItem","ListItemButton","ListItemText","ListItemAvatar","ListItemSecondaryAction","HiUserCircle","HiOutlineExternalLink","RiDiscLine","CircularProgress","_","useStyles","theme","avatar","backgroundColor","palette","primary","main","ArtistesPage","dispatch","navigate","classes","artistes","loading","artistLoading","artist","albums","albumLoading","album","map","a","name","email","phone","website","id","title","find","userId"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getArtistesAsync } from \"@/store/reducers/artistSlice\";\nimport { getAlbumsAsync } from \"@/store/reducers/albumSlice\";\nimport { makeStyles } from \"@mui/styles\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@mui/material/ListItemSecondaryAction\";\nimport { HiUserCircle, HiOutlineExternalLink } from \"react-icons/hi\";\nimport { RiDiscLine } from \"react-icons/ri\";\nimport { CircularProgress } from \"@mui/material\";\nimport _ from \"lodash\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    \"&.MuiAvatar-root\": {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst ArtistesPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const { artistes, loading: artistLoading } = useSelector(\n    ({ artist }) => artist\n  );\n  const { albums, loading: albumLoading } = useSelector(({ album }) => album);\n\n  useEffect(() => {\n    dispatch(getArtistesAsync());\n  }, [dispatch]);\n\n  return (\n    <div className=\"max-w-6xl mr-auto p-8 border\">\n      <h2 className=\"text-4xl font-bold pb-8\">Chocolate city artistes</h2>\n\n      <div className=\"grid grid-cols-12 gap-16\">\n        <div className=\"col-span-12 md:col-span-7\">\n          <h2 className=\"text-2xl font-medium text-gray-800 pb-6\">\n            Artistes list\n          </h2>\n\n          {artistLoading ? (\n            <CircularProgress />\n          ) : (\n            <List dense className=\"border-l-4 border-gray-400\">\n              {artistes.map((a) => (\n                <ListItem key={a.id}>\n                  <ListItemButton>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <HiUserCircle />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={`${a.name} â€” ${a.email}`}\n                      secondary={\n                        <>\n                          <span>\n                            {a.phone} â€” {a.website}\n                          </span>\n                          <br />\n                          <span>{a.website}</span>\n                        </>\n                      }\n                    />\n                    <ListItemSecondaryAction>\n                      <Button\n                        edge=\"start\"\n                        size=\"small\"\n                        aria-label=\"delete\"\n                        onClick={() => dispatch(getAlbumsAsync(a.id))}\n                      >\n                        view album\n                      </Button>\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"view\"\n                        onClick={() => navigate(`/artistes/${a.id}/albums`)}\n                      >\n                        <HiOutlineExternalLink />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItemButton>\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </div>\n\n        <div className=\"col-span-12 md:col-span-5\">\n          <h2 className=\"text-2xl font-medium text-gray-800 pb-6\">\n            Artiste's Album\n          </h2>\n\n          {albumLoading ? (\n            <CircularProgress />\n          ) : (\n            <List dense className=\"border-l-4 border-green-200\">\n              {albums.map((a) => (\n                <ListItem key={a.id}>\n                  <ListItemAvatar>\n                    <Avatar className={classes.avatar}>\n                      <RiDiscLine />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={`${a.title}`}\n                    secondary={\n                      <span>\n                        owned by {_.find(artistes, { id: a.userId })?.name}\n                      </span>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ArtistesPage;\n"]},"metadata":{},"sourceType":"module"}