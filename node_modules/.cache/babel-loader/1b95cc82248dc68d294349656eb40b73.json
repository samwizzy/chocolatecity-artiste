{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getAlbumsAsync = createAsyncThunk(\"albums/all\", async userId => {\n  return await axios.get(`albums?userId=${userId}`).then(res => {\n    return res.data;\n  });\n});\nexport const getAlbumPhotosAsync = createAsyncThunk(\"albums/photos\", async albumId => {\n  return await axios.get(`albums/${albumId}/photos`).then(res => {\n    return res.data;\n  });\n});\nconst albumSlice = createSlice({\n  name: \"albums\",\n  initialState: {\n    loading: false,\n    albums: [],\n    photos: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getAlbumsAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(getAlbumsAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.albums = action.payload;\n    });\n    builder.addCase(getAlbumsAsync.rejected, (state, action) => {\n      state.loading = false;\n    }); // get album photos\n\n    builder.addCase(getAlbumPhotosAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(getAlbumPhotosAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.photos = action.payload;\n    });\n    builder.addCase(getAlbumPhotosAsync.rejected, (state, action) => {\n      state.loading = false;\n    });\n  }\n});\nexport default albumSlice.reducer;","map":{"version":3,"sources":["/Users/admin/Documents/projects/ccartists-app/src/store/reducers/albumSlice.js"],"names":["createSlice","createAsyncThunk","axios","getAlbumsAsync","userId","get","then","res","data","getAlbumPhotosAsync","albumId","albumSlice","name","initialState","loading","albums","photos","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAAC,YAAD,EAAe,MAAOG,MAAP,IAAkB;AAC7E,SAAO,MAAMF,KAAK,CAACG,GAAN,CAAW,iBAAgBD,MAAO,EAAlC,EAAqCE,IAArC,CAA2CC,GAAD,IAAS;AAC9D,WAAOA,GAAG,CAACC,IAAX;AACD,GAFY,CAAb;AAGD,CAJ6C,CAAvC;AAMP,OAAO,MAAMC,mBAAmB,GAAGR,gBAAgB,CACjD,eADiD,EAEjD,MAAOS,OAAP,IAAmB;AACjB,SAAO,MAAMR,KAAK,CAACG,GAAN,CAAW,UAASK,OAAQ,SAA5B,EAAsCJ,IAAtC,CAA4CC,GAAD,IAAS;AAC/D,WAAOA,GAAG,CAACC,IAAX;AACD,GAFY,CAAb;AAGD,CANgD,CAA5C;AASP,MAAMG,UAAU,GAAGX,WAAW,CAAC;AAC7BY,EAAAA,IAAI,EAAE,QADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,KADG;AAEZC,IAAAA,MAAM,EAAE,EAFI;AAGZC,IAAAA,MAAM,EAAE;AAHI,GAFe;AAO7BC,EAAAA,QAAQ,EAAE,EAPmB;AAQ7BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,cAAc,CAACkB,OAA/B,EAAwC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzDD,MAAAA,KAAK,CAACR,OAAN,GAAgB,IAAhB;AACD,KAFD;AAGAK,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,cAAc,CAACqB,SAA/B,EAA0C,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC3DD,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACAQ,MAAAA,KAAK,CAACP,MAAN,GAAeQ,MAAM,CAACE,OAAtB;AACD,KAHD;AAIAN,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,cAAc,CAACuB,QAA/B,EAAyC,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC1DD,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACD,KAFD,EAR0B,CAW1B;;AACAK,IAAAA,OAAO,CAACC,OAAR,CAAgBX,mBAAmB,CAACY,OAApC,EAA6C,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9DD,MAAAA,KAAK,CAACR,OAAN,GAAgB,IAAhB;AACD,KAFD;AAGAK,IAAAA,OAAO,CAACC,OAAR,CAAgBX,mBAAmB,CAACe,SAApC,EAA+C,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAChED,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACAQ,MAAAA,KAAK,CAACN,MAAN,GAAeO,MAAM,CAACE,OAAtB;AACD,KAHD;AAIAN,IAAAA,OAAO,CAACC,OAAR,CAAgBX,mBAAmB,CAACiB,QAApC,EAA8C,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC/DD,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACD,KAFD;AAGD;AA9B4B,CAAD,CAA9B;AAiCA,eAAeH,UAAU,CAACgB,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getAlbumsAsync = createAsyncThunk(\"albums/all\", async (userId) => {\n  return await axios.get(`albums?userId=${userId}`).then((res) => {\n    return res.data;\n  });\n});\n\nexport const getAlbumPhotosAsync = createAsyncThunk(\n  \"albums/photos\",\n  async (albumId) => {\n    return await axios.get(`albums/${albumId}/photos`).then((res) => {\n      return res.data;\n    });\n  }\n);\n\nconst albumSlice = createSlice({\n  name: \"albums\",\n  initialState: {\n    loading: false,\n    albums: [],\n    photos: [],\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlbumsAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(getAlbumsAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.albums = action.payload;\n    });\n    builder.addCase(getAlbumsAsync.rejected, (state, action) => {\n      state.loading = false;\n    });\n    // get album photos\n    builder.addCase(getAlbumPhotosAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(getAlbumPhotosAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.photos = action.payload;\n    });\n    builder.addCase(getAlbumPhotosAsync.rejected, (state, action) => {\n      state.loading = false;\n    });\n  },\n});\n\nexport default albumSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}