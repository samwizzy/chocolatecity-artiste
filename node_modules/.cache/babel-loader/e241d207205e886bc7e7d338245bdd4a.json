{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/projects/ccartists-app/src/views/pages/Albums/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getArtistesAsync } from \"@/store/reducers/artistSlice\";\nimport { getAlbumsAsync, getAlbumPhotosAsync } from \"@/store/reducers/albumSlice\"; // import { getTweetByidAsync } from \"@/store/reducers/tweetSlice\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Avatar from \"@mui/material/Avatar\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport { RiDiscLine } from \"react-icons/ri\";\nimport { CircularProgress } from \"@mui/material\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    \"&.MuiAvatar-root\": {\n      backgroundColor: theme.palette.primary.main\n    }\n  }\n}));\n\nconst AlbumsPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const params = useParams();\n  const {\n    artistes\n  } = useSelector(({\n    artist\n  }) => artist);\n  const {\n    albums,\n    photos,\n    loading: albumLoading\n  } = useSelector(({\n    album\n  }) => album);\n  useEffect(() => {\n    dispatch(getArtistesAsync());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getAlbumsAsync(params.userId));\n  }, [dispatch, params]);\n  console.log(artistes, \"artistes\");\n  console.log(albums, \"albums\");\n  console.log(photos, \"photos\");\n  console.log(params, \"params\");\n  console.log(albumLoading, \"albumLoading\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" max-w-6xl mx-auto p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold pb-8\",\n      children: \"Chocolate city artistes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-12 gap-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-12 md:col-span-7\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-medium text-gray-800 pb-6\",\n          children: \"Albums list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), albumLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          className: \"border-l-4 border-green-200\",\n          children: albums.map(a => {\n            var _$find;\n\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              onClick: () => dispatch(getAlbumPhotosAsync(a.id)),\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: /*#__PURE__*/_jsxDEV(RiDiscLine, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: a.title,\n                  secondary: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"owned by \", (_$find = _.find(artistes, {\n                      id: a.userId\n                    })) === null || _$find === void 0 ? void 0 : _$find.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, a.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-12 md:col-span-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-medium text-gray-800 pb-6\",\n          children: \"Album's Photos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), albumLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          className: \"border-l-4 border-green-200\",\n          children: albums.map(a => {\n            var _$find2;\n\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.avatar,\n                  children: /*#__PURE__*/_jsxDEV(RiDiscLine, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${a.title}`,\n                secondary: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"owned by \", (_$find2 = _.find(artistes, {\n                    id: a.userId\n                  })) === null || _$find2 === void 0 ? void 0 : _$find2.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)]\n            }, a.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlbumsPage, \"hhknaeCfgubcSt6nd/nHdv+oheM=\", false, function () {\n  return [useDispatch, useStyles, useParams, useSelector, useSelector];\n});\n\n_c = AlbumsPage;\nexport default AlbumsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumsPage\");","map":{"version":3,"sources":["/Users/admin/Documents/projects/ccartists-app/src/views/pages/Albums/index.js"],"names":["React","useEffect","useSelector","useDispatch","useParams","getArtistesAsync","getAlbumsAsync","getAlbumPhotosAsync","makeStyles","Avatar","List","ListItem","ListItemButton","ListItemText","ListItemAvatar","RiDiscLine","CircularProgress","_","useStyles","theme","avatar","backgroundColor","palette","primary","main","AlbumsPage","dispatch","classes","params","artistes","artist","albums","photos","loading","albumLoading","album","userId","console","log","map","a","id","title","find","name"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getArtistesAsync } from \"@/store/reducers/artistSlice\";\nimport {\n  getAlbumsAsync,\n  getAlbumPhotosAsync,\n} from \"@/store/reducers/albumSlice\";\n// import { getTweetByidAsync } from \"@/store/reducers/tweetSlice\";\nimport { makeStyles } from \"@mui/styles\";\nimport Avatar from \"@mui/material/Avatar\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport { RiDiscLine } from \"react-icons/ri\";\nimport { CircularProgress } from \"@mui/material\";\nimport _ from \"lodash\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    \"&.MuiAvatar-root\": {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst AlbumsPage = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const params = useParams();\n  const { artistes } = useSelector(({ artist }) => artist);\n  const {\n    albums,\n    photos,\n    loading: albumLoading,\n  } = useSelector(({ album }) => album);\n\n  useEffect(() => {\n    dispatch(getArtistesAsync());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getAlbumsAsync(params.userId));\n  }, [dispatch, params]);\n\n  console.log(artistes, \"artistes\");\n  console.log(albums, \"albums\");\n  console.log(photos, \"photos\");\n  console.log(params, \"params\");\n  console.log(albumLoading, \"albumLoading\");\n\n  return (\n    <div className=\" max-w-6xl mx-auto p-8\">\n      <h2 className=\"text-4xl font-bold pb-8\">Chocolate city artistes</h2>\n\n      <div className=\"grid grid-cols-12 gap-16\">\n        <div className=\"col-span-12 md:col-span-7\">\n          <h2 className=\"text-2xl font-medium text-gray-800 pb-6\">\n            Albums list\n          </h2>\n\n          {albumLoading ? (\n            <CircularProgress />\n          ) : (\n            <List dense className=\"border-l-4 border-green-200\">\n              {albums.map((a) => (\n                <ListItem\n                  key={a.id}\n                  onClick={() => dispatch(getAlbumPhotosAsync(a.id))}\n                >\n                  <ListItemButton>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <RiDiscLine />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={a.title}\n                      secondary={\n                        <span>\n                          owned by {_.find(artistes, { id: a.userId })?.name}\n                        </span>\n                      }\n                    />\n                  </ListItemButton>\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </div>\n\n        <div className=\"col-span-12 md:col-span-5\">\n          <h2 className=\"text-2xl font-medium text-gray-800 pb-6\">\n            Album's Photos\n          </h2>\n\n          {albumLoading ? (\n            <CircularProgress />\n          ) : (\n            <List dense className=\"border-l-4 border-green-200\">\n              {albums.map((a) => (\n                <ListItem key={a.id}>\n                  <ListItemAvatar>\n                    <Avatar className={classes.avatar}>\n                      <RiDiscLine />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={`${a.title}`}\n                    secondary={\n                      <span>\n                        owned by {_.find(artistes, { id: a.userId })?.name}\n                      </span>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AlbumsPage;\n"]},"metadata":{},"sourceType":"module"}