{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getAlbumsAsync = createAsyncThunk(\"albums/all\", async userId => {\n  return await axios.get(`albums?userId=${userId}`).then(res => {\n    return res.data;\n  });\n});\nconst albumSlice = createSlice({\n  name: \"albums\",\n  initialState: {\n    loading: false,\n    albums: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getAlbumsAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(getAlbumsAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.projects = action.payload;\n    });\n    builder.addCase(getAlbumsAsync.rejected, (state, action) => {\n      state.loading = false;\n      state.projects = action.payload;\n    });\n  }\n});\nexport default albumSlice.reducer;","map":{"version":3,"sources":["/Users/admin/Documents/projects/ccartists-app/src/store/reducers/albumSlice.js"],"names":["createSlice","createAsyncThunk","axios","getAlbumsAsync","userId","get","then","res","data","albumSlice","name","initialState","loading","albums","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","projects","payload","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAAC,YAAD,EAAe,MAAOG,MAAP,IAAkB;AAC7E,SAAO,MAAMF,KAAK,CAACG,GAAN,CAAW,iBAAgBD,MAAO,EAAlC,EAAqCE,IAArC,CAA2CC,GAAD,IAAS;AAC9D,WAAOA,GAAG,CAACC,IAAX;AACD,GAFY,CAAb;AAGD,CAJ6C,CAAvC;AAMP,MAAMC,UAAU,GAAGT,WAAW,CAAC;AAC7BU,EAAAA,IAAI,EAAE,QADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,KADG;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAFe;AAM7BC,EAAAA,QAAQ,EAAE,EANmB;AAO7BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBd,cAAc,CAACe,OAA/B,EAAwC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzDD,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACD,KAFD;AAGAI,IAAAA,OAAO,CAACC,OAAR,CAAgBd,cAAc,CAACkB,SAA/B,EAA0C,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC3DD,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACG,QAAN,GAAiBF,MAAM,CAACG,OAAxB;AACD,KAHD;AAIAP,IAAAA,OAAO,CAACC,OAAR,CAAgBd,cAAc,CAACqB,QAA/B,EAAyC,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC1DD,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACG,QAAN,GAAiBF,MAAM,CAACG,OAAxB;AACD,KAHD;AAID;AAnB4B,CAAD,CAA9B;AAsBA,eAAed,UAAU,CAACgB,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getAlbumsAsync = createAsyncThunk(\"albums/all\", async (userId) => {\n  return await axios.get(`albums?userId=${userId}`).then((res) => {\n    return res.data;\n  });\n});\n\nconst albumSlice = createSlice({\n  name: \"albums\",\n  initialState: {\n    loading: false,\n    albums: [],\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlbumsAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(getAlbumsAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.projects = action.payload;\n    });\n    builder.addCase(getAlbumsAsync.rejected, (state, action) => {\n      state.loading = false;\n      state.projects = action.payload;\n    });\n  },\n});\n\nexport default albumSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}