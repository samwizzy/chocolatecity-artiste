{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { openSnackbar } from \"@/store/reducers/@app/snackbarSlice\";\nexport const signUpAsync = createAsyncThunk(\"auth/signup\", async (data, thunkAPI) => {\n  return await axios.post(\"auth/signup\", data).then(res => {\n    thunkAPI.dispatch(openSnackbar({\n      message: \"User saved successfully\"\n    }));\n    return res.data;\n  });\n});\nexport const signInAsync = createAsyncThunk(\"auth/signin\", async (data, thunkAPI) => {\n  return await axios.post(\"auth/signin\", data).then(res => {\n    return res.data;\n  }).catch(err => {\n    if (!err.response) throw err;\n    return thunkAPI.rejectWithValue(err.response.data);\n  });\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    loading: false,\n    user: null,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(signInAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(signInAsync.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.loading = false;\n    });\n    builder.addCase(signInAsync.rejected, (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    });\n    builder.addCase(signUpAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(signUpAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    });\n    builder.addCase(signUpAsync.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/admin/Documents/projects/ccartists-app/src/store/reducers/authSlice.js"],"names":["createSlice","createAsyncThunk","axios","openSnackbar","signUpAsync","data","thunkAPI","post","then","res","dispatch","message","signInAsync","catch","err","response","rejectWithValue","authSlice","name","initialState","loading","user","error","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { openSnackbar } from \"@/store/reducers/@app/snackbarSlice\";\n\nexport const signUpAsync = createAsyncThunk(\n  \"auth/signup\",\n  async (data, thunkAPI) => {\n    return await axios.post(\"auth/signup\", data).then((res) => {\n      thunkAPI.dispatch(openSnackbar({ message: \"User saved successfully\" }));\n      return res.data;\n    });\n  }\n);\n\nexport const signInAsync = createAsyncThunk(\n  \"auth/signin\",\n  async (data, thunkAPI) => {\n    return await axios\n      .post(\"auth/signin\", data)\n      .then((res) => {\n        return res.data;\n      })\n      .catch((err) => {\n        if (!err.response) throw err;\n        return thunkAPI.rejectWithValue(err.response.data);\n      });\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    loading: false,\n    user: null,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(signInAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(signInAsync.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.loading = false;\n    });\n    builder.addCase(signInAsync.rejected, (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    });\n\n    builder.addCase(signUpAsync.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(signUpAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    });\n    builder.addCase(signUpAsync.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  },\n});\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}