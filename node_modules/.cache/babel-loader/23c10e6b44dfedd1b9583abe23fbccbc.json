{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/projects/ccartists-app/src/views/pages/Tweets/dialogs/TweetDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateTweetsAsync } from \"@/store/reducers/tweetSlice\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Stack from \"@mui/material/Stack\";\nimport { MdClose } from \"react-icons/md\";\nimport { closeDialog } from \"@/store/reducers/tweetSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BootstrapDialogTitle = props => {\n  const {\n    children,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DialogTitle, {\n    sx: {\n      m: 0,\n      p: 2\n    },\n    ...other,\n    children: [children, onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      onClick: onClose,\n      sx: {\n        position: \"absolute\",\n        right: 8,\n        top: 8,\n        color: theme => theme.palette.grey[500]\n      },\n      children: /*#__PURE__*/_jsxDEV(MdClose, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BootstrapDialogTitle;\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired\n};\nexport default function TweetDialog() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({\n    name: \"\",\n    body: \"\"\n  });\n  const {\n    open,\n    data\n  } = useSelector(({\n    tweet\n  }) => tweet.dialog);\n  useEffect(() => {\n    if (data) {\n      setForm(state => ({ ...state,\n        name: data.name,\n        body: data.body\n      }));\n    }\n  }, [data]);\n\n  const handleChange = ev => {\n    setForm({ ...form,\n      [ev.target.name]: ev.target.value\n    });\n  };\n\n  const handleClose = () => {\n    dispatch(closeDialog());\n  };\n\n  const handleSave = () => {\n    dispatch(updateTweetsAsync(form));\n    dispatch(handleClose());\n  };\n\n  console.log(data, \"data\");\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(BootstrapDialogTitle, {\n      id: \"dialog-title\",\n      onClose: handleClose,\n      children: \"Update tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              name: \"name\",\n              value: form.name,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              name: \"body\",\n              value: form.body,\n              onChange: handleChange,\n              rows: 3,\n              multiline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        autoFocus: true,\n        onClick: handleSave,\n        children: \"Save changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TweetDialog, \"BPl8LCjx5q6JMLrfnVsb0aFOfqE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = TweetDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BootstrapDialogTitle\");\n$RefreshReg$(_c2, \"TweetDialog\");","map":{"version":3,"sources":["/Users/admin/Documents/projects/ccartists-app/src/views/pages/Tweets/dialogs/TweetDialog.js"],"names":["React","useState","useEffect","PropTypes","useSelector","useDispatch","updateTweetsAsync","Button","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","FormLabel","OutlinedInput","IconButton","Stack","MdClose","closeDialog","BootstrapDialogTitle","props","children","onClose","other","m","p","position","right","top","color","theme","palette","grey","propTypes","node","func","isRequired","TweetDialog","dispatch","form","setForm","name","body","open","data","tweet","dialog","state","handleChange","ev","target","value","handleClose","handleSave","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateTweetsAsync } from \"@/store/reducers/tweetSlice\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Stack from \"@mui/material/Stack\";\nimport { MdClose } from \"react-icons/md\";\n\nimport { closeDialog } from \"@/store/reducers/tweetSlice\";\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <MdClose />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function TweetDialog() {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({ name: \"\", body: \"\" });\n  const { open, data } = useSelector(({ tweet }) => tweet.dialog);\n\n  useEffect(() => {\n    if (data) {\n      setForm((state) => ({ ...state, name: data.name, body: data.body }));\n    }\n  }, [data]);\n\n  const handleChange = (ev) => {\n    setForm({ ...form, [ev.target.name]: ev.target.value });\n  };\n\n  const handleClose = () => {\n    dispatch(closeDialog());\n  };\n\n  const handleSave = () => {\n    dispatch(updateTweetsAsync(form));\n    dispatch(handleClose());\n  };\n\n  console.log(data, \"data\");\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n      fullWidth\n      maxWidth=\"xs\"\n    >\n      <BootstrapDialogTitle id=\"dialog-title\" onClose={handleClose}>\n        Update tweet\n      </BootstrapDialogTitle>\n      <DialogContent dividers>\n        <form noValidate className=\"w-full\">\n          <Stack spacing={2}>\n            <FormControl fullWidth>\n              <FormLabel>Name</FormLabel>\n              <OutlinedInput\n                name=\"name\"\n                value={form.name}\n                onChange={handleChange}\n              />\n            </FormControl>\n\n            <FormControl fullWidth>\n              <FormLabel>Body</FormLabel>\n              <OutlinedInput\n                name=\"body\"\n                value={form.body}\n                onChange={handleChange}\n                rows={3}\n                multiline\n              />\n            </FormControl>\n          </Stack>\n        </form>\n      </DialogContent>\n\n      <DialogActions>\n        <Button autoFocus onClick={handleSave}>\n          Save changes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}