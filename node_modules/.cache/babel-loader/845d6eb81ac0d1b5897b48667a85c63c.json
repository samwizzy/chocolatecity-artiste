{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/projects/ccartists-app/src/views/pages/Tweets/NewTweet.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTweetAsync } from \"@/store/reducers/tweetSlice\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport Stack from \"@mui/material/Stack\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  name: \"\",\n  body: \"\"\n};\n\nfunction NewTweet() {\n  _s();\n\n  const dispatch = useDispatch();\n  const isSubmitting = useSelector(({\n    tweet\n  }) => tweet.isSubmitting);\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues\n  });\n\n  const onSubmit = data => {\n    dispatch(addTweetAsync(data));\n    reset(null);\n  };\n\n  console.log(errors, \"errors\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            rules: {\n              required: \"Name is required\"\n            },\n            control: control,\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: errors.name && errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"body\",\n            rules: {\n              required: \"Body is required\"\n            },\n            control: control,\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field,\n              multiline: true,\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: errors.body && errors.body.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        autoFocus: true,\n        variant: \"outlined\",\n        endIcon: isSubmitting && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 36\n        }, this),\n        children: \"Save tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewTweet, \"IEuT+lTI7rrFiUwIwn0oWIL5a2g=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = NewTweet;\nexport default NewTweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTweet\");","map":{"version":3,"sources":["/Users/admin/Documents/projects/ccartists-app/src/views/pages/Tweets/NewTweet.js"],"names":["React","useDispatch","useSelector","addTweetAsync","Button","CircularProgress","FormControl","FormLabel","OutlinedInput","FormHelperText","Stack","useForm","Controller","defaultValues","name","body","NewTweet","dispatch","isSubmitting","tweet","control","handleSubmit","reset","formState","errors","onSubmit","data","console","log","required","field","message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTweetAsync } from \"@/store/reducers/tweetSlice\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport Stack from \"@mui/material/Stack\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nconst defaultValues = {\n  name: \"\",\n  body: \"\",\n};\n\nfunction NewTweet() {\n  const dispatch = useDispatch();\n  const isSubmitting = useSelector(({ tweet }) => tweet.isSubmitting);\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ defaultValues });\n\n  const onSubmit = (data) => {\n    dispatch(addTweetAsync(data));\n    reset(null);\n  };\n\n  console.log(errors, \"errors\");\n\n  return (\n    <div className=\"w-full\">\n      <form noValidate onSubmit={handleSubmit(onSubmit)}>\n        <Stack spacing={2} mb={4}>\n          <FormControl fullWidth>\n            <FormLabel>Name</FormLabel>\n            <Controller\n              name=\"name\"\n              rules={{ required: \"Name is required\" }}\n              control={control}\n              render={({ field }) => <OutlinedInput {...field} />}\n            />\n            <FormHelperText>\n              {errors.name && errors.name.message}\n            </FormHelperText>\n          </FormControl>\n\n          <FormControl fullWidth>\n            <FormLabel>Body</FormLabel>\n            <Controller\n              name=\"body\"\n              rules={{ required: \"Body is required\" }}\n              control={control}\n              render={({ field }) => (\n                <OutlinedInput {...field} multiline rows={3} />\n              )}\n            />\n            <FormHelperText>\n              {errors.body && errors.body.message}\n            </FormHelperText>\n          </FormControl>\n        </Stack>\n\n        <Button\n          type=\"submit\"\n          autoFocus\n          variant=\"outlined\"\n          endIcon={isSubmitting && <CircularProgress size={16} />}\n        >\n          Save tweet\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default NewTweet;\n"]},"metadata":{},"sourceType":"module"}