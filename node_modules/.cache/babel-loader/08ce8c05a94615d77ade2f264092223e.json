{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/projects/ccartists-app/src/views/auth/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Button from \"@mui/material/Button\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Stack from \"@mui/material/Stack\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\nimport { signInAsync } from \"@/store/reducers/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  emailAddress: \"\",\n  password: \"\"\n};\n\nfunction SignIn() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [visibility, setVisibility] = useState(false);\n  const {\n    user,\n    loading,\n    error\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues\n  });\n\n  const handleClickShowPassword = () => {\n    setVisibility(!visibility);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const resetForm = () => {\n    reset(null, {\n      keepValues: false\n    });\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n    dispatch(signInAsync(data));\n    resetForm();\n  };\n\n  console.log(error, \"error\");\n  console.log(user, \"user\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-full flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 border rounded-md shadow-sm md:w-4/12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-8\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4 text-red-500\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error && error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              rules: {\n                required: true\n              },\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 40\n              }, this),\n              name: \"emailAddress\",\n              control: control\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.emailAddress && \"Email address is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              rules: {\n                required: true\n              },\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field,\n                type: visibility ? \"text\" : \"password\",\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: handleClickShowPassword,\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: visibility ? /*#__PURE__*/_jsxDEV(MdVisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 41\n                    }, this) : /*#__PURE__*/_jsxDEV(MdVisibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this),\n              name: \"password\",\n              control: control\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.password && \"Password is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            startIcon: loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this),\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"7AzbXlsOKtgiX3qeNm9GVpkce9A=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/admin/Documents/projects/ccartists-app/src/views/auth/SignIn.js"],"names":["React","useState","useDispatch","useSelector","useForm","Controller","Button","OutlinedInput","FormControl","FormHelperText","CircularProgress","IconButton","Stack","InputAdornment","FormLabel","MdVisibility","MdVisibilityOff","signInAsync","defaultValues","emailAddress","password","SignIn","dispatch","visibility","setVisibility","user","loading","error","auth","control","handleSubmit","reset","formState","errors","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","resetForm","keepValues","onSubmit","data","console","log","message","required","field"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Button from \"@mui/material/Button\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Stack from \"@mui/material/Stack\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\nimport { signInAsync } from \"@/store/reducers/authSlice\";\n\nconst defaultValues = {\n  emailAddress: \"\",\n  password: \"\",\n};\n\nfunction SignIn() {\n  const dispatch = useDispatch();\n  const [visibility, setVisibility] = useState(false);\n  const { user, loading, error } = useSelector(({ auth }) => auth);\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ defaultValues });\n\n  const handleClickShowPassword = () => {\n    setVisibility(!visibility);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const resetForm = () => {\n    reset(null, { keepValues: false });\n  };\n\n  const onSubmit = (data) => {\n    console.log(data);\n    dispatch(signInAsync(data));\n    resetForm();\n  };\n\n  console.log(error, \"error\");\n  console.log(user, \"user\");\n\n  return (\n    <div className=\"h-screen w-full flex items-center justify-center\">\n      <div className=\"p-8 border rounded-md shadow-sm md:w-4/12\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-8\">Sign In</h2>\n        <div className=\"my-4 text-red-500\">\n          <p>{error && error.message}</p>\n        </div>\n\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Stack spacing={1}>\n            <FormControl variant=\"outlined\" fullWidth>\n              <FormLabel component=\"legend\">Email Address</FormLabel>\n              <Controller\n                rules={{ required: true }}\n                render={({ field }) => <OutlinedInput {...field} />}\n                name=\"emailAddress\"\n                control={control}\n              />\n              <FormHelperText>\n                {errors.emailAddress && \"Email address is required\"}\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" fullWidth>\n              <FormLabel component=\"legend\">Password</FormLabel>\n              <Controller\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <OutlinedInput\n                    {...field}\n                    type={visibility ? \"text\" : \"password\"}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowPassword}\n                          onMouseDown={handleMouseDownPassword}\n                          edge=\"end\"\n                        >\n                          {visibility ? <MdVisibilityOff /> : <MdVisibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                )}\n                name=\"password\"\n                control={control}\n              />\n              <FormHelperText>\n                {errors.password && \"Password is required\"}\n              </FormHelperText>\n            </FormControl>\n          </Stack>\n\n          <div className=\"mt-8\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              startIcon={loading && <CircularProgress size={16} />}\n            >\n              Sign in\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}